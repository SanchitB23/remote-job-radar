name: Create/Delete Neon Branch for Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create_neon_branch:
    name: Create Neon Branch
    outputs:
      db_url: ${{ steps.create_neon_branch_encode.outputs.db_url }}
      db_url_with_pooler: ${{ steps.create_neon_branch_encode.outputs.db_url_with_pooler }}
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # ‚úÖ checkout code to run migrations
      - uses: actions/setup-node@v4 # ‚úÖ install Node for prisma migrate
        with:
          node-version: 20
      - run: npm ci

      - name: Create Neon Branch
        id: create
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Expose encoded DB URLs
        id: encode
        run: |
          echo "db_url=${{ steps.create.outputs.db_url }}" >> $GITHUB_OUTPUT
          echo "db_url_with_pooler=${{ steps.create.outputs.db_url_with_pooler }}" >> $GITHUB_OUTPUT

      - name: Run Migrations
        run: npm run db:migrate
        env:
          DATABASE_URL: "${{ steps.create.outputs.db_url_with_pooler }}"
          PG_DATABASE_URL: "${{ steps.create.outputs.db_url_with_pooler }}"

      - name: Create Comment
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üóÑÔ∏è Preview DB ready\n\nDB URL: \`${{ steps.encode.outputs.db_url_with_pooler }}\``
            })

  delete_neon_branch:
    name: Delete Neon Branch
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}
